name: Deployment
on:
  push:
    branches:
      - master
   
jobs:
  reusing:
    uses: ./.github/workflows/reusable.yml
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and Cache Dependency
        id: cache-dep
        uses: ./.github/actions/cached-dependency
        with:
          caching: 'false'
          testVar: 20
        
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    outputs:
      returnvar: ${{ steps.cache-dep.outputs.returnvar}}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and Cache Dependency
        id: cache-dep
        uses: ./.github/actions/cached-dependency
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and Cache Dependency
        id: test-var
        uses: ./.github/actions/cached-dependency
      - name: print the step output
        run: echo ${{ steps.test-var.outputs.returnvar}}
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  reuse:
    runs-on: ubuntu-latest
    steps: 
      - name: run the reusable flow
        # id: reuse-step
        uses: ./.github/workflows/reusable.yml
        
      # - name: print the variable
      #   run: echo ${{steps.reuse-step.outputs.return-num}}       
  deploy:
    needs: [build,test]
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        run: |
          echo "Deploying..."
          echo ${{needs.test.outputs.returnvar}}
